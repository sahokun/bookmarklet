javascript:(async function(){function h(){var b=document.querySelector("div[data-v-2819963c].ammSwapModal__balance").querySelectorAll("p");b=Array.from(b).find(c=>c.textContent.includes("\u6240\u6301\u91cf")).textContent.match(/[\d,]+(\.\d+)?/);if(!b)throw Error("\u6570\u5024\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002");return parseFloat(b[0].replace(/,/g,""))}function k(b){const c=document.querySelector(".ammSwapModal__balance"),a=document.createElement("p");a.textContent=`\u6700\u9069\u58f2\u5374\u91cf: ${b}`;
a.classList.add("optimal-seller-amount");(b=c.querySelector("p.optimal-seller-amount"))?b.textContent=a.textContent:c.prepend(a)}function l(){var b=document.querySelector(".ammSwapModal__token");if(!b)throw Error("\u7d20\u6750\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002");var c=b.querySelector("img").src.match(/\/(\d{3})\./);c=c?c[1]:null;b=b.querySelector("p").textContent;console.log("3\u6841\u6570\u5b57:",c);console.log("p \u306e\u6587\u5b57:",b);return{materialId:parseInt(c),
materialName:b}}async function m(b,c){console.log("\u7d20\u6750ID",b,"\u5e0c\u671b\u58f2\u5374\u7d20\u6750\u91cf:",c);a:{for(a of n.tokenPricesMap)if(a[0]===b){var a=a[1].seller.price;break a}a=null}console.log("\u73fe\u5728\u4fa1\u683c:",a);a=Math.floor((Math.floor(a*c)-1)/a*100)/100;0>a&&(a=0);console.log("\u4e0b\u9650\u7d20\u6750\u8cfc\u5165\u91cf:",a);var e=(await $nuxt.$store.$laboratoryService.estimateSaleAmount(b,1E3*c)).amount;if(0===e)throw Error("1GUM\u306b\u6e80\u305f\u306a\u3044\u305f\u3081\u58f2\u5374\u3067\u304d\u307e\u305b\u3093");
console.log("\u76ee\u6a19\u4fa1\u683c:",e);for(var f=0;;){console.log("\u30eb\u30fc\u30d7\u56de\u6570:",f+1);console.log("\u4e0a\u9650:",c,"\u4e0b\u9650:",a,"\u76ee\u6a19:",e);var d=Math.ceil((c+a)/2*100)/100;console.log("\u4e2d\u9593\u5024:",d);let g=(await $nuxt.$store.$laboratoryService.estimateSaleAmount(b,1E3*d)).amount;console.log("\u4e2d\u9593\u5024\u306e\u4fa1\u683c:",g);g===e?(c=d,console.log("midPrice === targetPrice"),console.log(`upperBound${c} = mid${d}`)):(console.log("midPrice < targetPrice"),
a=d,console.log(`lowerBound${a} = mid${d}`));d=Math.ceil(1*d)/1E3;console.log(`tolerance: ${d}`);console.log(`(upperBound - lowerBound): ${c-a}, (0.01 + tolerance + EPSILON): ${.01+d+1E-10}`);console.log(c-a<=.01+d+1E-10);if(c-a<=.01+d+1E-10){console.log("\u4e0b\u9650\u3068\u4e0a\u9650\u304c\u96a3\u308a\u5408\u3063\u305f\u5834\u5408\u3001\u30eb\u30fc\u30d7\u7d42\u4e86");break}if(9===f){alert("\u30eb\u30fc\u30d7\u56de\u6570\u4e0a\u9650\u3092\u8d85\u3048\u307e\u3057\u305f\u3002");break}f++}console.log("\u58f2\u5374\u53ef\u80fd\u91cf:",
c);return c}const n=await $nuxt.$store.$laboratoryService.getAllTokenPrices();try{const b=l(),c=parseFloat(h());let a=await m(b.materialId,c);k(a);alert(`\u6700\u9069\u306a\u58f2\u5374\u91cf: ${a}`)}catch(b){console.log(b),alert(`\u6700\u9069\u306a\u58f2\u5374\u91cf\u7b97\u51fa\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\n\n${b.toString()}`)}})();
